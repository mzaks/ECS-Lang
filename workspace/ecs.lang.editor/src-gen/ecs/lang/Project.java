/**
 * generated by Xtext 2.10.0
 */
package ecs.lang;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Project</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ecs.lang.Project#getPlatformDefinition <em>Platform Definition</em>}</li>
 *   <li>{@link ecs.lang.Project#getNamespace <em>Namespace</em>}</li>
 *   <li>{@link ecs.lang.Project#getTypeAliases <em>Type Aliases</em>}</li>
 *   <li>{@link ecs.lang.Project#getComponents <em>Components</em>}</li>
 *   <li>{@link ecs.lang.Project#getSystems <em>Systems</em>}</li>
 *   <li>{@link ecs.lang.Project#getParentSystems <em>Parent Systems</em>}</li>
 *   <li>{@link ecs.lang.Project#getContextDefinitions <em>Context Definitions</em>}</li>
 * </ul>
 *
 * @see ecs.lang.LangPackage#getProject()
 * @model
 * @generated
 */
public interface Project extends EObject
{
  /**
   * Returns the value of the '<em><b>Platform Definition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Platform Definition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Platform Definition</em>' containment reference.
   * @see #setPlatformDefinition(Platforms)
   * @see ecs.lang.LangPackage#getProject_PlatformDefinition()
   * @model containment="true"
   * @generated
   */
  Platforms getPlatformDefinition();

  /**
   * Sets the value of the '{@link ecs.lang.Project#getPlatformDefinition <em>Platform Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Platform Definition</em>' containment reference.
   * @see #getPlatformDefinition()
   * @generated
   */
  void setPlatformDefinition(Platforms value);

  /**
   * Returns the value of the '<em><b>Namespace</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Namespace</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Namespace</em>' containment reference.
   * @see #setNamespace(Namespace)
   * @see ecs.lang.LangPackage#getProject_Namespace()
   * @model containment="true"
   * @generated
   */
  Namespace getNamespace();

  /**
   * Sets the value of the '{@link ecs.lang.Project#getNamespace <em>Namespace</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Namespace</em>' containment reference.
   * @see #getNamespace()
   * @generated
   */
  void setNamespace(Namespace value);

  /**
   * Returns the value of the '<em><b>Type Aliases</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.Alias}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type Aliases</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Aliases</em>' containment reference list.
   * @see ecs.lang.LangPackage#getProject_TypeAliases()
   * @model containment="true"
   * @generated
   */
  EList<Alias> getTypeAliases();

  /**
   * Returns the value of the '<em><b>Components</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.Component}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Components</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Components</em>' containment reference list.
   * @see ecs.lang.LangPackage#getProject_Components()
   * @model containment="true"
   * @generated
   */
  EList<Component> getComponents();

  /**
   * Returns the value of the '<em><b>Systems</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.System}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Systems</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Systems</em>' containment reference list.
   * @see ecs.lang.LangPackage#getProject_Systems()
   * @model containment="true"
   * @generated
   */
  EList<ecs.lang.System> getSystems();

  /**
   * Returns the value of the '<em><b>Parent Systems</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.ParentSystem}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Parent Systems</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Parent Systems</em>' containment reference list.
   * @see ecs.lang.LangPackage#getProject_ParentSystems()
   * @model containment="true"
   * @generated
   */
  EList<ParentSystem> getParentSystems();

  /**
   * Returns the value of the '<em><b>Context Definitions</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.ContextDefinition}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Context Definitions</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Context Definitions</em>' containment reference list.
   * @see ecs.lang.LangPackage#getProject_ContextDefinitions()
   * @model containment="true"
   * @generated
   */
  EList<ContextDefinition> getContextDefinitions();

} // Project
