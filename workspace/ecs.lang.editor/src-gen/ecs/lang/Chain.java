/**
 * generated by Xtext 2.10.0
 */
package ecs.lang;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Chain</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ecs.lang.Chain#isComponentAlias <em>Component Alias</em>}</li>
 *   <li>{@link ecs.lang.Chain#isPrecondition <em>Precondition</em>}</li>
 *   <li>{@link ecs.lang.Chain#getUniqueComp <em>Unique Comp</em>}</li>
 *   <li>{@link ecs.lang.Chain#getGroups <em>Groups</em>}</li>
 *   <li>{@link ecs.lang.Chain#getChildren <em>Children</em>}</li>
 * </ul>
 *
 * @see ecs.lang.LangPackage#getChain()
 * @model
 * @generated
 */
public interface Chain extends AComponent, ASystem
{
  /**
   * Returns the value of the '<em><b>Component Alias</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Component Alias</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Component Alias</em>' attribute.
   * @see #setComponentAlias(boolean)
   * @see ecs.lang.LangPackage#getChain_ComponentAlias()
   * @model
   * @generated
   */
  boolean isComponentAlias();

  /**
   * Sets the value of the '{@link ecs.lang.Chain#isComponentAlias <em>Component Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Component Alias</em>' attribute.
   * @see #isComponentAlias()
   * @generated
   */
  void setComponentAlias(boolean value);

  /**
   * Returns the value of the '<em><b>Precondition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Precondition</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Precondition</em>' attribute.
   * @see #setPrecondition(boolean)
   * @see ecs.lang.LangPackage#getChain_Precondition()
   * @model
   * @generated
   */
  boolean isPrecondition();

  /**
   * Sets the value of the '{@link ecs.lang.Chain#isPrecondition <em>Precondition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Precondition</em>' attribute.
   * @see #isPrecondition()
   * @generated
   */
  void setPrecondition(boolean value);

  /**
   * Returns the value of the '<em><b>Unique Comp</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.UniqueComponentAccess}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Unique Comp</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Unique Comp</em>' containment reference list.
   * @see ecs.lang.LangPackage#getChain_UniqueComp()
   * @model containment="true"
   * @generated
   */
  EList<UniqueComponentAccess> getUniqueComp();

  /**
   * Returns the value of the '<em><b>Groups</b></em>' containment reference list.
   * The list contents are of type {@link ecs.lang.Group}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Groups</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Groups</em>' containment reference list.
   * @see ecs.lang.LangPackage#getChain_Groups()
   * @model containment="true"
   * @generated
   */
  EList<Group> getGroups();

  /**
   * Returns the value of the '<em><b>Children</b></em>' reference list.
   * The list contents are of type {@link ecs.lang.ASystem}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Children</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Children</em>' reference list.
   * @see ecs.lang.LangPackage#getChain_Children()
   * @model
   * @generated
   */
  EList<ASystem> getChildren();

} // Chain
