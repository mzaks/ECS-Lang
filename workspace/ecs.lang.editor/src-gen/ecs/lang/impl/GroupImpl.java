/**
 * generated by Xtext 2.10.0
 */
package ecs.lang.impl;

import ecs.lang.AComponent;
import ecs.lang.ApiRule;
import ecs.lang.Group;
import ecs.lang.LangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Group</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ecs.lang.impl.GroupImpl#isGroup <em>Group</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#isUnique <em>Unique</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#getName <em>Name</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#getAllOfComponents <em>All Of Components</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#getAnyOfComponents <em>Any Of Components</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#getNoneOfComponents <em>None Of Components</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#getApiRules <em>Api Rules</em>}</li>
 *   <li>{@link ecs.lang.impl.GroupImpl#isDestroy <em>Destroy</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GroupImpl extends MinimalEObjectImpl.Container implements Group
{
  /**
   * The default value of the '{@link #isGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGroup()
   * @generated
   * @ordered
   */
  protected static final boolean GROUP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGroup()
   * @generated
   * @ordered
   */
  protected boolean group = GROUP_EDEFAULT;

  /**
   * The default value of the '{@link #isUnique() <em>Unique</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUnique()
   * @generated
   * @ordered
   */
  protected static final boolean UNIQUE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUnique() <em>Unique</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUnique()
   * @generated
   * @ordered
   */
  protected boolean unique = UNIQUE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAllOfComponents() <em>All Of Components</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllOfComponents()
   * @generated
   * @ordered
   */
  protected EList<AComponent> allOfComponents;

  /**
   * The cached value of the '{@link #getAnyOfComponents() <em>Any Of Components</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnyOfComponents()
   * @generated
   * @ordered
   */
  protected EList<AComponent> anyOfComponents;

  /**
   * The cached value of the '{@link #getNoneOfComponents() <em>None Of Components</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoneOfComponents()
   * @generated
   * @ordered
   */
  protected EList<AComponent> noneOfComponents;

  /**
   * The cached value of the '{@link #getApiRules() <em>Api Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApiRules()
   * @generated
   * @ordered
   */
  protected EList<ApiRule> apiRules;

  /**
   * The default value of the '{@link #isDestroy() <em>Destroy</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDestroy()
   * @generated
   * @ordered
   */
  protected static final boolean DESTROY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDestroy() <em>Destroy</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDestroy()
   * @generated
   * @ordered
   */
  protected boolean destroy = DESTROY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GroupImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LangPackage.Literals.GROUP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isGroup()
  {
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGroup(boolean newGroup)
  {
    boolean oldGroup = group;
    group = newGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.GROUP__GROUP, oldGroup, group));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isUnique()
  {
    return unique;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnique(boolean newUnique)
  {
    boolean oldUnique = unique;
    unique = newUnique;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.GROUP__UNIQUE, oldUnique, unique));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.GROUP__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AComponent> getAllOfComponents()
  {
    if (allOfComponents == null)
    {
      allOfComponents = new EObjectResolvingEList<AComponent>(AComponent.class, this, LangPackage.GROUP__ALL_OF_COMPONENTS);
    }
    return allOfComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AComponent> getAnyOfComponents()
  {
    if (anyOfComponents == null)
    {
      anyOfComponents = new EObjectResolvingEList<AComponent>(AComponent.class, this, LangPackage.GROUP__ANY_OF_COMPONENTS);
    }
    return anyOfComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AComponent> getNoneOfComponents()
  {
    if (noneOfComponents == null)
    {
      noneOfComponents = new EObjectResolvingEList<AComponent>(AComponent.class, this, LangPackage.GROUP__NONE_OF_COMPONENTS);
    }
    return noneOfComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ApiRule> getApiRules()
  {
    if (apiRules == null)
    {
      apiRules = new EObjectContainmentEList<ApiRule>(ApiRule.class, this, LangPackage.GROUP__API_RULES);
    }
    return apiRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDestroy()
  {
    return destroy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDestroy(boolean newDestroy)
  {
    boolean oldDestroy = destroy;
    destroy = newDestroy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.GROUP__DESTROY, oldDestroy, destroy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LangPackage.GROUP__API_RULES:
        return ((InternalEList<?>)getApiRules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LangPackage.GROUP__GROUP:
        return isGroup();
      case LangPackage.GROUP__UNIQUE:
        return isUnique();
      case LangPackage.GROUP__NAME:
        return getName();
      case LangPackage.GROUP__ALL_OF_COMPONENTS:
        return getAllOfComponents();
      case LangPackage.GROUP__ANY_OF_COMPONENTS:
        return getAnyOfComponents();
      case LangPackage.GROUP__NONE_OF_COMPONENTS:
        return getNoneOfComponents();
      case LangPackage.GROUP__API_RULES:
        return getApiRules();
      case LangPackage.GROUP__DESTROY:
        return isDestroy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LangPackage.GROUP__GROUP:
        setGroup((Boolean)newValue);
        return;
      case LangPackage.GROUP__UNIQUE:
        setUnique((Boolean)newValue);
        return;
      case LangPackage.GROUP__NAME:
        setName((String)newValue);
        return;
      case LangPackage.GROUP__ALL_OF_COMPONENTS:
        getAllOfComponents().clear();
        getAllOfComponents().addAll((Collection<? extends AComponent>)newValue);
        return;
      case LangPackage.GROUP__ANY_OF_COMPONENTS:
        getAnyOfComponents().clear();
        getAnyOfComponents().addAll((Collection<? extends AComponent>)newValue);
        return;
      case LangPackage.GROUP__NONE_OF_COMPONENTS:
        getNoneOfComponents().clear();
        getNoneOfComponents().addAll((Collection<? extends AComponent>)newValue);
        return;
      case LangPackage.GROUP__API_RULES:
        getApiRules().clear();
        getApiRules().addAll((Collection<? extends ApiRule>)newValue);
        return;
      case LangPackage.GROUP__DESTROY:
        setDestroy((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.GROUP__GROUP:
        setGroup(GROUP_EDEFAULT);
        return;
      case LangPackage.GROUP__UNIQUE:
        setUnique(UNIQUE_EDEFAULT);
        return;
      case LangPackage.GROUP__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LangPackage.GROUP__ALL_OF_COMPONENTS:
        getAllOfComponents().clear();
        return;
      case LangPackage.GROUP__ANY_OF_COMPONENTS:
        getAnyOfComponents().clear();
        return;
      case LangPackage.GROUP__NONE_OF_COMPONENTS:
        getNoneOfComponents().clear();
        return;
      case LangPackage.GROUP__API_RULES:
        getApiRules().clear();
        return;
      case LangPackage.GROUP__DESTROY:
        setDestroy(DESTROY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.GROUP__GROUP:
        return group != GROUP_EDEFAULT;
      case LangPackage.GROUP__UNIQUE:
        return unique != UNIQUE_EDEFAULT;
      case LangPackage.GROUP__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LangPackage.GROUP__ALL_OF_COMPONENTS:
        return allOfComponents != null && !allOfComponents.isEmpty();
      case LangPackage.GROUP__ANY_OF_COMPONENTS:
        return anyOfComponents != null && !anyOfComponents.isEmpty();
      case LangPackage.GROUP__NONE_OF_COMPONENTS:
        return noneOfComponents != null && !noneOfComponents.isEmpty();
      case LangPackage.GROUP__API_RULES:
        return apiRules != null && !apiRules.isEmpty();
      case LangPackage.GROUP__DESTROY:
        return destroy != DESTROY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (group: ");
    result.append(group);
    result.append(", unique: ");
    result.append(unique);
    result.append(", name: ");
    result.append(name);
    result.append(", destroy: ");
    result.append(destroy);
    result.append(')');
    return result.toString();
  }

} //GroupImpl
