/*
 * generated by Xtext 2.10.0
 */
grammar InternalLang;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ecs.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ecs.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ecs.services.LangGrammarAccess;

}

@parser::members {

 	private LangGrammarAccess grammarAccess;

    public InternalLangParser(TokenStream input, LangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Project";
   	}

   	@Override
   	protected LangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getPlatformDefinitionPlatformsParserRuleCall_0_0());
				}
				lv_platformDefinition_0_0=rulePlatforms
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					set(
						$current,
						"platformDefinition",
						lv_platformDefinition_0_0,
						"ecs.Lang.Platforms");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getNamespaceNamespaceParserRuleCall_1_0());
				}
				lv_namespace_1_0=ruleNamespace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					set(
						$current,
						"namespace",
						lv_namespace_1_0,
						"ecs.Lang.Namespace");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getTypeAliasesAliasParserRuleCall_2_0());
				}
				lv_typeAliases_2_0=ruleAlias
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"typeAliases",
						lv_typeAliases_2_0,
						"ecs.Lang.Alias");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getComponentsComponentParserRuleCall_3_0());
				}
				lv_components_3_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"components",
						lv_components_3_0,
						"ecs.Lang.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getSystemsSystemParserRuleCall_4_0());
				}
				lv_systems_4_0=ruleSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"systems",
						lv_systems_4_0,
						"ecs.Lang.System");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getParentSystemsParentSystemParserRuleCall_5_0());
				}
				lv_parentSystems_5_0=ruleParentSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"parentSystems",
						lv_parentSystems_5_0,
						"ecs.Lang.ParentSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getContextDefinitionsContextDefinitionParserRuleCall_6_0());
				}
				lv_contextDefinitions_6_0=ruleContextDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"contextDefinitions",
						lv_contextDefinitions_6_0,
						"ecs.Lang.ContextDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleContextDefinition
entryRuleContextDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextDefinitionRule()); }
	iv_ruleContextDefinition=ruleContextDefinition
	{ $current=$iv_ruleContextDefinition.current; }
	EOF;

// Rule ContextDefinition
ruleContextDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ctx'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextDefinitionAccess().getCtxKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContextDefinitionAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextDefinitionRule());
					}
					add(
						$current,
						"name",
						lv_name_1_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContextDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextDefinitionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getContextDefinitionAccess().getComponentsAComponentCrossReference_3_0());
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getContextDefinitionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePlatforms
entryRulePlatforms returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlatformsRule()); }
	iv_rulePlatforms=rulePlatforms
	{ $current=$iv_rulePlatforms.current; }
	EOF;

// Rule Platforms
rulePlatforms returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='platform'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlatformsAccess().getPlatformKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlatformsAccess().getIdsPlatformIDParserRuleCall_1_0());
				}
				lv_ids_1_0=rulePlatformID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlatformsRule());
					}
					add(
						$current,
						"ids",
						lv_ids_1_0,
						"ecs.Lang.PlatformID");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulePlatformID
entryRulePlatformID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlatformIDRule()); }
	iv_rulePlatformID=rulePlatformID
	{ $current=$iv_rulePlatformID.current; }
	EOF;

// Rule PlatformID
rulePlatformID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPlatformIDAccess().getNameValidIDParserRuleCall_0());
			}
			lv_name_0_0=ruleValidID
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPlatformIDRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"ecs.Lang.ValidID");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current; }
	EOF;

// Rule Namespace
ruleNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='namespace'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamespaceAccess().getNamespaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ecs.Lang.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alias'
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasAccess().getAliasKeyword_0());
		}
		(
			(
				lv_componentAlias_1_0='comp'
				{
					newLeafNode(lv_componentAlias_1_0, grammarAccess.getAliasAccess().getComponentAliasCompKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRule());
					}
					setWithLastConsumed($current, "componentAlias", true, "comp");
				}
			)
		)?
		(
			(
				lv_unique_2_0='unique'
				{
					newLeafNode(lv_unique_2_0, grammarAccess.getAliasAccess().getUniqueUniqueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRule());
					}
					setWithLastConsumed($current, "unique", true, "unique");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasAccess().getNameValidIDParserRuleCall_3_0());
				}
				lv_name_3_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAliasAccess().getListOfAliasesAliasListParserRuleCall_4_0_0());
					}
					lv_listOfAliases_4_0=ruleAliasList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAliasRule());
						}
						set(
							$current,
							"listOfAliases",
							lv_listOfAliases_4_0,
							"ecs.Lang.AliasList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAliasAccess().getSingleAliasSingleAliasParserRuleCall_4_1_0());
					}
					lv_singleAlias_5_0=ruleSingleAlias
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAliasRule());
						}
						set(
							$current,
							"singleAlias",
							lv_singleAlias_5_0,
							"ecs.Lang.SingleAlias");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSingleAlias
entryRuleSingleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleAliasRule()); }
	iv_ruleSingleAlias=ruleSingleAlias
	{ $current=$iv_ruleSingleAlias.current; }
	EOF;

// Rule SingleAlias
ruleSingleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleAliasAccess().getEqualsSignKeyword_0());
		}
		(
			(
				lv_typeAlias_1_0=RULE_STRING
				{
					newLeafNode(lv_typeAlias_1_0, grammarAccess.getSingleAliasAccess().getTypeAliasSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleAliasRule());
					}
					setWithLastConsumed(
						$current,
						"typeAlias",
						lv_typeAlias_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_size_2_0=RULE_INT
				{
					newLeafNode(lv_size_2_0, grammarAccess.getSingleAliasAccess().getSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleAliasRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
	)
;

// Entry rule entryRuleAliasList
entryRuleAliasList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasListRule()); }
	iv_ruleAliasList=ruleAliasList
	{ $current=$iv_ruleAliasList.current; }
	EOF;

// Rule AliasList
ruleAliasList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasListAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasListAccess().getRulesAliasRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleAliasRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasListRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"ecs.Lang.AliasRule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getAliasListAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleAliasRule
entryRuleAliasRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRuleRule()); }
	iv_ruleAliasRule=ruleAliasRule
	{ $current=$iv_ruleAliasRule.current; }
	EOF;

// Rule AliasRule
ruleAliasRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAliasRuleAccess().getPlatformPlatformIDCrossReference_0_0());
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAliasRuleAccess().getColonKeyword_1());
		}
		(
			(
				lv_typeAlias_2_0=RULE_STRING
				{
					newLeafNode(lv_typeAlias_2_0, grammarAccess.getAliasRuleAccess().getTypeAliasSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRuleRule());
					}
					setWithLastConsumed(
						$current,
						"typeAlias",
						lv_typeAlias_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				(
					lv_size_3_0=RULE_INT
					{
						newLeafNode(lv_size_3_0, grammarAccess.getAliasRuleAccess().getSizeINTTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAliasRuleRule());
						}
						setWithLastConsumed(
							$current,
							"size",
							lv_size_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_variableSize_4_0='*'
					{
						newLeafNode(lv_variableSize_4_0, grammarAccess.getAliasRuleAccess().getVariableSizeAsteriskKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAliasRuleRule());
						}
						setWithLastConsumed($current, "variableSize", true, "*");
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='comp'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getCompKeyword_0());
		}
		(
			(
				lv_unique_1_0='unique'
				{
					newLeafNode(lv_unique_1_0, grammarAccess.getComponentAccess().getUniqueUniqueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed($current, "unique", true, "unique");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getNameValidIDParserRuleCall_2_0());
				}
				lv_name_2_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					otherlv_3=':'
					{
						newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getColonKeyword_3_0_0_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComponentRule());
								}
							}
							otherlv_4=RULE_ID
							{
								newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getValueTypeAliasCrossReference_3_0_0_1_0());
							}
						)
					)
				)?
				    |
				(
					otherlv_5='{'
					{
						newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getComponentAccess().getPropertiesComponentPropertyParserRuleCall_3_0_1_1_0());
							}
							lv_properties_6_0=ruleComponentProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getComponentRule());
								}
								add(
									$current,
									"properties",
									lv_properties_6_0,
									"ecs.Lang.ComponentProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)+
					otherlv_7='}'
					{
						newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_3_0_1_2());
					}
				)
			)
			    |
			(
				otherlv_8='/'
				{
					newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getSolidusKeyword_3_1_0());
				}
				(
					(
						lv_prefix_9_0=RULE_STRING
						{
							newLeafNode(lv_prefix_9_0, grammarAccess.getComponentAccess().getPrefixSTRINGTerminalRuleCall_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComponentRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleComponentProperty
entryRuleComponentProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentPropertyRule()); }
	iv_ruleComponentProperty=ruleComponentProperty
	{ $current=$iv_ruleComponentProperty.current; }
	EOF;

// Rule ComponentProperty
ruleComponentProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentPropertyAccess().getNameValidIDParserRuleCall_0_0());
				}
				lv_name_0_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentPropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentPropertyAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentPropertyRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getComponentPropertyAccess().getTypeAliasCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sys'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSysKeyword_0());
		}
		(
			(
				lv_componentAlias_1_0='comp'
				{
					newLeafNode(lv_componentAlias_1_0, grammarAccess.getSystemAccess().getComponentAliasCompKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed($current, "componentAlias", true, "comp");
				}
			)
		)?
		(
			(
				lv_unique_2_0='unique'
				{
					newLeafNode(lv_unique_2_0, grammarAccess.getSystemAccess().getUniqueUniqueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed($current, "unique", true, "unique");
				}
			)
		)?
		(
			(
				lv_init_3_0='init'
				{
					newLeafNode(lv_init_3_0, grammarAccess.getSystemAccess().getInitInitKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed($current, "init", true, "init");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getNameValidIDParserRuleCall_4_0());
				}
				lv_name_4_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getInputInputParserRuleCall_6_0());
				}
				lv_input_6_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"input",
						lv_input_6_0,
						"ecs.Lang.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getUniqueCompUniqueComponentAccessParserRuleCall_7_0());
				}
				lv_uniqueComp_7_0=ruleUniqueComponentAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"uniqueComp",
						lv_uniqueComp_7_0,
						"ecs.Lang.UniqueComponentAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getGroupsGroupParserRuleCall_8_0());
				}
				lv_groups_8_0=ruleGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"groups",
						lv_groups_8_0,
						"ecs.Lang.Group");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getCreateRulesCreateRuleParserRuleCall_9_0());
				}
				lv_createRules_9_0=ruleCreateRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"createRules",
						lv_createRules_9_0,
						"ecs.Lang.CreateRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		(
			(
				lv_unqiue_1_0='unique'
				{
					newLeafNode(lv_unqiue_1_0, grammarAccess.getInputAccess().getUnqiueUniqueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed($current, "unqiue", true, "unique");
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInputAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='trigger'
		{
			newLeafNode(otherlv_3, grammarAccess.getInputAccess().getTriggerKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getInputAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getTriggersInputTriggerParserRuleCall_5_0());
				}
				lv_triggers_5_0=ruleInputTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					add(
						$current,
						"triggers",
						lv_triggers_5_0,
						"ecs.Lang.InputTrigger");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_6='ensure'
			{
				newLeafNode(otherlv_6, grammarAccess.getInputAccess().getEnsureKeyword_6_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getInputAccess().getColonKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getInputAccess().getEnsureComponentsAComponentCrossReference_6_2_0());
					}
				)
			)+
		)?
		(
			otherlv_9='exclude'
			{
				newLeafNode(otherlv_9, grammarAccess.getInputAccess().getExcludeKeyword_7_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getInputAccess().getColonKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getInputAccess().getExcludeComponentsAComponentCrossReference_7_2_0());
					}
				)
			)+
		)?
		otherlv_12='api'
		{
			newLeafNode(otherlv_12, grammarAccess.getInputAccess().getApiKeyword_8());
		}
		otherlv_13=':'
		{
			newLeafNode(otherlv_13, grammarAccess.getInputAccess().getColonKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getApiRulesApiRuleParserRuleCall_10_0());
				}
				lv_apiRules_14_0=ruleApiRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					add(
						$current,
						"apiRules",
						lv_apiRules_14_0,
						"ecs.Lang.ApiRule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_destroy_15_0='destroy'
				{
					newLeafNode(lv_destroy_15_0, grammarAccess.getInputAccess().getDestroyDestroyKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed($current, "destroy", true, "destroy");
				}
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getInputAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleInputTrigger
entryRuleInputTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputTriggerRule()); }
	iv_ruleInputTrigger=ruleInputTrigger
	{ $current=$iv_ruleInputTrigger.current; }
	EOF;

// Rule InputTrigger
ruleInputTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='enteredGroup'
			{
				newLeafNode(otherlv_0, grammarAccess.getInputTriggerAccess().getEnteredGroupKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getInputTriggerAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputTriggerRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getInputTriggerAccess().getEnterComponentsAComponentCrossReference_0_2_0());
					}
				)
			)+
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getInputTriggerAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='leftGroup'
			{
				newLeafNode(otherlv_4, grammarAccess.getInputTriggerAccess().getLeftGroupKeyword_1_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getInputTriggerAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputTriggerRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getInputTriggerAccess().getLeftAComponentCrossReference_1_2_0());
					}
				)
			)+
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getInputTriggerAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			otherlv_8='enteredOrLeftGroup'
			{
				newLeafNode(otherlv_8, grammarAccess.getInputTriggerAccess().getEnteredOrLeftGroupKeyword_2_0());
			}
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getInputTriggerAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputTriggerRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getInputTriggerAccess().getEnteredOrLeftAComponentCrossReference_2_2_0());
					}
				)
			)+
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getInputTriggerAccess().getRightParenthesisKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleCreateRule
entryRuleCreateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRuleRule()); }
	iv_ruleCreateRule=ruleCreateRule
	{ $current=$iv_ruleCreateRule.current; }
	EOF;

// Rule CreateRule
ruleCreateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateRuleAccess().getCreateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateRuleAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateRuleAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateRuleRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getCreateRuleAccess().getComponentTypesAComponentCrossReference_3_0());
				}
			)
		)+
	)
;

// Entry rule entryRuleUniqueComponentAccess
entryRuleUniqueComponentAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueComponentAccessRule()); }
	iv_ruleUniqueComponentAccess=ruleUniqueComponentAccess
	{ $current=$iv_ruleUniqueComponentAccess.current; }
	EOF;

// Rule UniqueComponentAccess
ruleUniqueComponentAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='unique'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniqueComponentAccessAccess().getUniqueKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getUniqueComponentAccessAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueComponentAccessAccess().getApiRuleApiRuleParserRuleCall_2_0());
				}
				lv_apiRule_2_0=ruleApiRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueComponentAccessRule());
					}
					set(
						$current,
						"apiRule",
						lv_apiRule_2_0,
						"ecs.Lang.ApiRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_group_0_0='group'
					{
						newLeafNode(lv_group_0_0, grammarAccess.getGroupAccess().getGroupGroupKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
						setWithLastConsumed($current, "group", true, "group");
					}
				)
			)
			    |
			(
				(
					lv_unique_1_0='unique'
					{
						newLeafNode(lv_unique_1_0, grammarAccess.getGroupAccess().getUniqueUniqueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
						setWithLastConsumed($current, "unique", true, "unique");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_2_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_4='matcher'
		{
			newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getMatcherKeyword_3());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getColonKeyword_4());
		}
		(
			otherlv_6='allOf'
			{
				newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getAllOfKeyword_5_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getAllOfComponentsAComponentCrossReference_5_2_0());
					}
				)
			)+
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getGroupAccess().getRightParenthesisKeyword_5_3());
			}
		)?
		(
			otherlv_10='anyOf'
			{
				newLeafNode(otherlv_10, grammarAccess.getGroupAccess().getAnyOfKeyword_6_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getGroupAccess().getAnyOfComponentsAComponentCrossReference_6_2_0());
					}
				)
			)+
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getGroupAccess().getRightParenthesisKeyword_6_3());
			}
		)?
		(
			otherlv_14='noneOf'
			{
				newLeafNode(otherlv_14, grammarAccess.getGroupAccess().getNoneOfKeyword_7_0());
			}
			otherlv_15='('
			{
				newLeafNode(otherlv_15, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getGroupAccess().getNoneOfComponentsAComponentCrossReference_7_2_0());
					}
				)
			)+
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getGroupAccess().getRightParenthesisKeyword_7_3());
			}
		)?
		otherlv_18='api'
		{
			newLeafNode(otherlv_18, grammarAccess.getGroupAccess().getApiKeyword_8());
		}
		otherlv_19=':'
		{
			newLeafNode(otherlv_19, grammarAccess.getGroupAccess().getColonKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAccess().getApiRulesApiRuleParserRuleCall_10_0());
				}
				lv_apiRules_20_0=ruleApiRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupRule());
					}
					add(
						$current,
						"apiRules",
						lv_apiRules_20_0,
						"ecs.Lang.ApiRule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_destroy_21_0='destroy'
				{
					newLeafNode(lv_destroy_21_0, grammarAccess.getGroupAccess().getDestroyDestroyKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
					setWithLastConsumed($current, "destroy", true, "destroy");
				}
			)
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleApiRule
entryRuleApiRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApiRuleRule()); }
	iv_ruleApiRule=ruleApiRule
	{ $current=$iv_ruleApiRule.current; }
	EOF;

// Rule ApiRule
ruleApiRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApiRuleRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getApiRuleAccess().getComponentAComponentCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getApiRuleAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApiRuleAccess().getAccesorsComponentApiAccessorParserRuleCall_1_1_0());
					}
					lv_accesors_2_0=ruleComponentApiAccessor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApiRuleRule());
						}
						add(
							$current,
							"accesors",
							lv_accesors_2_0,
							"ecs.Lang.ComponentApiAccessor");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getApiRuleAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleComponentApiAccessor
entryRuleComponentApiAccessor returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComponentApiAccessorRule()); }
	iv_ruleComponentApiAccessor=ruleComponentApiAccessor
	{ $current=$iv_ruleComponentApiAccessor.current.getText(); }
	EOF;

// Rule ComponentApiAccessor
ruleComponentApiAccessor returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='add'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComponentApiAccessorAccess().getAddKeyword_0());
		}
		    |
		kw='get'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComponentApiAccessorAccess().getGetKeyword_1());
		}
		    |
		kw='has'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComponentApiAccessorAccess().getHasKeyword_2());
		}
		    |
		kw='replace'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComponentApiAccessorAccess().getReplaceKeyword_3());
		}
		    |
		kw='remove'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComponentApiAccessorAccess().getRemoveKeyword_4());
		}
	)
;

// Entry rule entryRuleParentSystem
entryRuleParentSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParentSystemRule()); }
	iv_ruleParentSystem=ruleParentSystem
	{ $current=$iv_ruleParentSystem.current; }
	EOF;

// Rule ParentSystem
ruleParentSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parent_sys'
		{
			newLeafNode(otherlv_0, grammarAccess.getParentSystemAccess().getParent_sysKeyword_0());
		}
		(
			(
				lv_componentAlias_1_0='comp'
				{
					newLeafNode(lv_componentAlias_1_0, grammarAccess.getParentSystemAccess().getComponentAliasCompKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParentSystemRule());
					}
					setWithLastConsumed($current, "componentAlias", true, "comp");
				}
			)
		)?
		(
			(
				lv_unique_2_0='unique'
				{
					newLeafNode(lv_unique_2_0, grammarAccess.getParentSystemAccess().getUniqueUniqueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParentSystemRule());
					}
					setWithLastConsumed($current, "unique", true, "unique");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParentSystemAccess().getNameValidIDParserRuleCall_3_0());
				}
				lv_name_3_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParentSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"ecs.Lang.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='extends'
			{
				newLeafNode(otherlv_4, grammarAccess.getParentSystemAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParentSystemRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getParentSystemAccess().getParentAliasCrossReference_4_1_0());
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getParentSystemAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParentSystemRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getParentSystemAccess().getChildrenASystemCrossReference_6_0());
				}
			)
		)+
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getParentSystemAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
			}
			this_ValidID_2=ruleValidID
			{
				$current.merge(this_ValidID_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidIDRule()); }
	iv_ruleValidID=ruleValidID
	{ $current=$iv_ruleValidID.current.getText(); }
	EOF;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
