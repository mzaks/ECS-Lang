/*
 * generated by Xtext 2.10.0
 */
package ecs.ide.contentassist.antlr;

import com.google.inject.Inject;
import ecs.ide.contentassist.antlr.internal.InternalLangParser;
import ecs.services.LangGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class LangParser extends AbstractContentAssistParser {

	@Inject
	private LangGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalLangParser createParser() {
		InternalLangParser result = new InternalLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAliasAccess().getAlternatives_3(), "rule__Alias__Alternatives_3");
					put(grammarAccess.getComponentAliasAccess().getAlternatives_1(), "rule__ComponentAlias__Alternatives_1");
					put(grammarAccess.getAComponentAccess().getAlternatives(), "rule__AComponent__Alternatives");
					put(grammarAccess.getComponentAccess().getAlternatives_2(), "rule__Component__Alternatives_2");
					put(grammarAccess.getComponentAccess().getAlternatives_2_0(), "rule__Component__Alternatives_2_0");
					put(grammarAccess.getComponentAccess().getAlternatives_2_0_0_2(), "rule__Component__Alternatives_2_0_0_2");
					put(grammarAccess.getInputTriggerAccess().getAlternatives(), "rule__InputTrigger__Alternatives");
					put(grammarAccess.getGroupAccess().getAlternatives_0(), "rule__Group__Alternatives_0");
					put(grammarAccess.getComponentApiAccessorAccess().getAlternatives(), "rule__ComponentApiAccessor__Alternatives");
					put(grammarAccess.getASystemAccess().getAlternatives(), "rule__ASystem__Alternatives");
					put(grammarAccess.getValidIDAccess().getAlternatives(), "rule__ValidID__Alternatives");
					put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
					put(grammarAccess.getContextDefinitionAccess().getGroup(), "rule__ContextDefinition__Group__0");
					put(grammarAccess.getContextDefinitionAccess().getGroup_1(), "rule__ContextDefinition__Group_1__0");
					put(grammarAccess.getContextReferenceAccess().getGroup(), "rule__ContextReference__Group__0");
					put(grammarAccess.getContextReferenceAccess().getGroup_1(), "rule__ContextReference__Group_1__0");
					put(grammarAccess.getPlatformsAccess().getGroup(), "rule__Platforms__Group__0");
					put(grammarAccess.getPlatformsAccess().getGroup_1(), "rule__Platforms__Group_1__0");
					put(grammarAccess.getNamespaceAccess().getGroup(), "rule__Namespace__Group__0");
					put(grammarAccess.getAliasAccess().getGroup(), "rule__Alias__Group__0");
					put(grammarAccess.getComponentAliasAccess().getGroup(), "rule__ComponentAlias__Group__0");
					put(grammarAccess.getSingleAliasAccess().getGroup(), "rule__SingleAlias__Group__0");
					put(grammarAccess.getAliasListAccess().getGroup(), "rule__AliasList__Group__0");
					put(grammarAccess.getAliasRuleAccess().getGroup(), "rule__AliasRule__Group__0");
					put(grammarAccess.getAliasRuleAccess().getGroup_3(), "rule__AliasRule__Group_3__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_2_0_0(), "rule__Component__Group_2_0_0__0");
					put(grammarAccess.getComponentAccess().getGroup_2_0_1(), "rule__Component__Group_2_0_1__0");
					put(grammarAccess.getComponentAccess().getGroup_2_0_1_1(), "rule__Component__Group_2_0_1_1__0");
					put(grammarAccess.getComponentAccess().getGroup_2_1(), "rule__Component__Group_2_1__0");
					put(grammarAccess.getComponentPropertyAccess().getGroup(), "rule__ComponentProperty__Group__0");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getInputAccess().getGroup(), "rule__Input__Group__0");
					put(grammarAccess.getInputAccess().getGroup_5(), "rule__Input__Group_5__0");
					put(grammarAccess.getInputAccess().getGroup_6(), "rule__Input__Group_6__0");
					put(grammarAccess.getInputAccess().getGroup_6_2(), "rule__Input__Group_6_2__0");
					put(grammarAccess.getInputAccess().getGroup_7(), "rule__Input__Group_7__0");
					put(grammarAccess.getInputAccess().getGroup_7_2(), "rule__Input__Group_7_2__0");
					put(grammarAccess.getInputAccess().getGroup_8(), "rule__Input__Group_8__0");
					put(grammarAccess.getInputAccess().getGroup_8_2(), "rule__Input__Group_8_2__0");
					put(grammarAccess.getInputAccess().getGroup_11(), "rule__Input__Group_11__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_0(), "rule__InputTrigger__Group_0__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_0_2(), "rule__InputTrigger__Group_0_2__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_1(), "rule__InputTrigger__Group_1__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_1_2(), "rule__InputTrigger__Group_1_2__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_2(), "rule__InputTrigger__Group_2__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_2_2(), "rule__InputTrigger__Group_2_2__0");
					put(grammarAccess.getCreateRuleAccess().getGroup(), "rule__CreateRule__Group__0");
					put(grammarAccess.getCreateRuleAccess().getGroup_3(), "rule__CreateRule__Group_3__0");
					put(grammarAccess.getCreateRuleAccess().getGroup_4(), "rule__CreateRule__Group_4__0");
					put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
					put(grammarAccess.getIndexAccess().getGroup_6(), "rule__Index__Group_6__0");
					put(grammarAccess.getIndexAccess().getGroup_6_2(), "rule__Index__Group_6_2__0");
					put(grammarAccess.getIndexAccess().getGroup_8(), "rule__Index__Group_8__0");
					put(grammarAccess.getUniqueComponentAccessAccess().getGroup(), "rule__UniqueComponentAccess__Group__0");
					put(grammarAccess.getUniqueComponentAccessAccess().getGroup_3(), "rule__UniqueComponentAccess__Group_3__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getGroupAccess().getGroup_5(), "rule__Group__Group_5__0");
					put(grammarAccess.getGroupAccess().getGroup_5_2(), "rule__Group__Group_5_2__0");
					put(grammarAccess.getGroupAccess().getGroup_6(), "rule__Group__Group_6__0");
					put(grammarAccess.getGroupAccess().getGroup_7(), "rule__Group__Group_7__0");
					put(grammarAccess.getGroupAccess().getGroup_8(), "rule__Group__Group_8__0");
					put(grammarAccess.getGroupAccess().getGroup_8_2(), "rule__Group__Group_8_2__0");
					put(grammarAccess.getGroupAccess().getGroup_11(), "rule__Group__Group_11__0");
					put(grammarAccess.getApiRuleAccess().getGroup(), "rule__ApiRule__Group__0");
					put(grammarAccess.getApiRuleAccess().getGroup_1(), "rule__ApiRule__Group_1__0");
					put(grammarAccess.getApiRuleAccess().getGroup_1_1(), "rule__ApiRule__Group_1_1__0");
					put(grammarAccess.getChainAccess().getGroup(), "rule__Chain__Group__0");
					put(grammarAccess.getChainAccess().getGroup_4(), "rule__Chain__Group_4__0");
					put(grammarAccess.getChainAccess().getGroup_4_1(), "rule__Chain__Group_4_1__0");
					put(grammarAccess.getChainAccess().getGroup_5(), "rule__Chain__Group_5__0");
					put(grammarAccess.getProcedureAccess().getGroup(), "rule__Procedure__Group__0");
					put(grammarAccess.getProcedureAccess().getGroup_1(), "rule__Procedure__Group_1__0");
					put(grammarAccess.getProcedureAccess().getGroup_4(), "rule__Procedure__Group_4__0");
					put(grammarAccess.getProcedureAccess().getGroup_10(), "rule__Procedure__Group_10__0");
					put(grammarAccess.getObserverAccess().getGroup(), "rule__Observer__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getProjectAccess().getPlatformDefinitionAssignment_0(), "rule__Project__PlatformDefinitionAssignment_0");
					put(grammarAccess.getProjectAccess().getNamespaceAssignment_1(), "rule__Project__NamespaceAssignment_1");
					put(grammarAccess.getProjectAccess().getContextDefinitionAssignment_2(), "rule__Project__ContextDefinitionAssignment_2");
					put(grammarAccess.getProjectAccess().getTypeAliasesAssignment_3(), "rule__Project__TypeAliasesAssignment_3");
					put(grammarAccess.getProjectAccess().getComponentsAssignment_4(), "rule__Project__ComponentsAssignment_4");
					put(grammarAccess.getProjectAccess().getProceduresAssignment_5(), "rule__Project__ProceduresAssignment_5");
					put(grammarAccess.getProjectAccess().getObserversAssignment_6(), "rule__Project__ObserversAssignment_6");
					put(grammarAccess.getProjectAccess().getSystemsAssignment_7(), "rule__Project__SystemsAssignment_7");
					put(grammarAccess.getProjectAccess().getChainsAssignment_8(), "rule__Project__ChainsAssignment_8");
					put(grammarAccess.getContextDefinitionAccess().getNamesAssignment_1_0(), "rule__ContextDefinition__NamesAssignment_1_0");
					put(grammarAccess.getContextNameAccess().getNameAssignment(), "rule__ContextName__NameAssignment");
					put(grammarAccess.getContextReferenceAccess().getContextAssignment_1_0(), "rule__ContextReference__ContextAssignment_1_0");
					put(grammarAccess.getPlatformsAccess().getIdsAssignment_1_0(), "rule__Platforms__IdsAssignment_1_0");
					put(grammarAccess.getPlatformIDAccess().getNameAssignment(), "rule__PlatformID__NameAssignment");
					put(grammarAccess.getNamespaceAccess().getNameAssignment_1(), "rule__Namespace__NameAssignment_1");
					put(grammarAccess.getAliasAccess().getComponentAliasAssignment_1(), "rule__Alias__ComponentAliasAssignment_1");
					put(grammarAccess.getAliasAccess().getNameAssignment_2(), "rule__Alias__NameAssignment_2");
					put(grammarAccess.getAliasAccess().getListOfAliasesAssignment_3_0(), "rule__Alias__ListOfAliasesAssignment_3_0");
					put(grammarAccess.getAliasAccess().getSingleAliasAssignment_3_1(), "rule__Alias__SingleAliasAssignment_3_1");
					put(grammarAccess.getComponentAliasAccess().getUniqueAssignment_1_1(), "rule__ComponentAlias__UniqueAssignment_1_1");
					put(grammarAccess.getComponentAliasAccess().getContextRefAssignment_2(), "rule__ComponentAlias__ContextRefAssignment_2");
					put(grammarAccess.getComponentAliasAccess().getUniqueAssignment_3(), "rule__ComponentAlias__UniqueAssignment_3");
					put(grammarAccess.getSingleAliasAccess().getTypeAliasAssignment_1(), "rule__SingleAlias__TypeAliasAssignment_1");
					put(grammarAccess.getSingleAliasAccess().getSizeAssignment_2(), "rule__SingleAlias__SizeAssignment_2");
					put(grammarAccess.getAliasListAccess().getRulesAssignment_1(), "rule__AliasList__RulesAssignment_1");
					put(grammarAccess.getAliasRuleAccess().getPlatformAssignment_0(), "rule__AliasRule__PlatformAssignment_0");
					put(grammarAccess.getAliasRuleAccess().getTypeAliasAssignment_2(), "rule__AliasRule__TypeAliasAssignment_2");
					put(grammarAccess.getAliasRuleAccess().getSizeAssignment_3_0(), "rule__AliasRule__SizeAssignment_3_0");
					put(grammarAccess.getAliasRuleAccess().getVariableSizeAssignment_3_1(), "rule__AliasRule__VariableSizeAssignment_3_1");
					put(grammarAccess.getComponentAccess().getComponentAliasAssignment_0(), "rule__Component__ComponentAliasAssignment_0");
					put(grammarAccess.getComponentAccess().getNameAssignment_1(), "rule__Component__NameAssignment_1");
					put(grammarAccess.getComponentAccess().getValueTypeAssignment_2_0_0_1(), "rule__Component__ValueTypeAssignment_2_0_0_1");
					put(grammarAccess.getComponentAccess().getIndexAssignment_2_0_0_2_0(), "rule__Component__IndexAssignment_2_0_0_2_0");
					put(grammarAccess.getComponentAccess().getMultiIndexAssignment_2_0_0_2_1(), "rule__Component__MultiIndexAssignment_2_0_0_2_1");
					put(grammarAccess.getComponentAccess().getPropertiesAssignment_2_0_1_1_0(), "rule__Component__PropertiesAssignment_2_0_1_1_0");
					put(grammarAccess.getComponentAccess().getPrefixAssignment_2_1_1(), "rule__Component__PrefixAssignment_2_1_1");
					put(grammarAccess.getComponentPropertyAccess().getNameAssignment_0(), "rule__ComponentProperty__NameAssignment_0");
					put(grammarAccess.getComponentPropertyAccess().getTypeAssignment_2(), "rule__ComponentProperty__TypeAssignment_2");
					put(grammarAccess.getSystemAccess().getComponentAliasAssignment_1(), "rule__System__ComponentAliasAssignment_1");
					put(grammarAccess.getSystemAccess().getInitAssignment_2(), "rule__System__InitAssignment_2");
					put(grammarAccess.getSystemAccess().getCleanupAssignment_3(), "rule__System__CleanupAssignment_3");
					put(grammarAccess.getSystemAccess().getTeardownAssignment_4(), "rule__System__TeardownAssignment_4");
					put(grammarAccess.getSystemAccess().getNameAssignment_5(), "rule__System__NameAssignment_5");
					put(grammarAccess.getSystemAccess().getInputAssignment_7(), "rule__System__InputAssignment_7");
					put(grammarAccess.getSystemAccess().getUniqueCompAssignment_8(), "rule__System__UniqueCompAssignment_8");
					put(grammarAccess.getSystemAccess().getGroupsAssignment_9(), "rule__System__GroupsAssignment_9");
					put(grammarAccess.getSystemAccess().getIndexAssignment_10(), "rule__System__IndexAssignment_10");
					put(grammarAccess.getSystemAccess().getCreateRulesAssignment_11(), "rule__System__CreateRulesAssignment_11");
					put(grammarAccess.getInputAccess().getUnqiueAssignment_1(), "rule__Input__UnqiueAssignment_1");
					put(grammarAccess.getInputAccess().getTriggersAssignment_5_0(), "rule__Input__TriggersAssignment_5_0");
					put(grammarAccess.getInputAccess().getEnsureComponentsAssignment_6_2_0(), "rule__Input__EnsureComponentsAssignment_6_2_0");
					put(grammarAccess.getInputAccess().getExcludeComponentsAssignment_7_2_0(), "rule__Input__ExcludeComponentsAssignment_7_2_0");
					put(grammarAccess.getInputAccess().getApiRulesAssignment_8_2_0(), "rule__Input__ApiRulesAssignment_8_2_0");
					put(grammarAccess.getInputAccess().getDestroyAssignment_9(), "rule__Input__DestroyAssignment_9");
					put(grammarAccess.getInputAccess().getContextRefAssignment_11_1(), "rule__Input__ContextRefAssignment_11_1");
					put(grammarAccess.getInputTriggerAccess().getEnterComponentsAssignment_0_2_0(), "rule__InputTrigger__EnterComponentsAssignment_0_2_0");
					put(grammarAccess.getInputTriggerAccess().getLeftAssignment_1_2_0(), "rule__InputTrigger__LeftAssignment_1_2_0");
					put(grammarAccess.getInputTriggerAccess().getEnteredOrLeftAssignment_2_2_0(), "rule__InputTrigger__EnteredOrLeftAssignment_2_2_0");
					put(grammarAccess.getCreateRuleAccess().getNameAssignment_1(), "rule__CreateRule__NameAssignment_1");
					put(grammarAccess.getCreateRuleAccess().getComponentTypesAssignment_3_0(), "rule__CreateRule__ComponentTypesAssignment_3_0");
					put(grammarAccess.getCreateRuleAccess().getContextRefAssignment_4_1(), "rule__CreateRule__ContextRefAssignment_4_1");
					put(grammarAccess.getIndexAccess().getNameAssignment_1(), "rule__Index__NameAssignment_1");
					put(grammarAccess.getIndexAccess().getComponentRefAssignment_5(), "rule__Index__ComponentRefAssignment_5");
					put(grammarAccess.getIndexAccess().getApiRulesAssignment_6_2_0(), "rule__Index__ApiRulesAssignment_6_2_0");
					put(grammarAccess.getIndexAccess().getDestroyAssignment_6_3(), "rule__Index__DestroyAssignment_6_3");
					put(grammarAccess.getIndexAccess().getContextRefAssignment_8_1(), "rule__Index__ContextRefAssignment_8_1");
					put(grammarAccess.getUniqueComponentAccessAccess().getApiRuleAssignment_2(), "rule__UniqueComponentAccess__ApiRuleAssignment_2");
					put(grammarAccess.getUniqueComponentAccessAccess().getContextRefAssignment_3_1(), "rule__UniqueComponentAccess__ContextRefAssignment_3_1");
					put(grammarAccess.getGroupAccess().getGroupAssignment_0_0(), "rule__Group__GroupAssignment_0_0");
					put(grammarAccess.getGroupAccess().getUniqueAssignment_0_1(), "rule__Group__UniqueAssignment_0_1");
					put(grammarAccess.getGroupAccess().getNameAssignment_1(), "rule__Group__NameAssignment_1");
					put(grammarAccess.getGroupAccess().getAllOfComponentsAssignment_5_2_0(), "rule__Group__AllOfComponentsAssignment_5_2_0");
					put(grammarAccess.getGroupAccess().getAnyOfComponentsAssignment_6_2(), "rule__Group__AnyOfComponentsAssignment_6_2");
					put(grammarAccess.getGroupAccess().getNoneOfComponentsAssignment_7_2(), "rule__Group__NoneOfComponentsAssignment_7_2");
					put(grammarAccess.getGroupAccess().getApiRulesAssignment_8_2_0(), "rule__Group__ApiRulesAssignment_8_2_0");
					put(grammarAccess.getGroupAccess().getDestroyAssignment_9(), "rule__Group__DestroyAssignment_9");
					put(grammarAccess.getGroupAccess().getContextRefAssignment_11_1(), "rule__Group__ContextRefAssignment_11_1");
					put(grammarAccess.getApiRuleAccess().getComponentAssignment_0(), "rule__ApiRule__ComponentAssignment_0");
					put(grammarAccess.getApiRuleAccess().getAccesorsAssignment_1_1_0(), "rule__ApiRule__AccesorsAssignment_1_1_0");
					put(grammarAccess.getChainAccess().getComponentAliasAssignment_1(), "rule__Chain__ComponentAliasAssignment_1");
					put(grammarAccess.getChainAccess().getNameAssignment_2(), "rule__Chain__NameAssignment_2");
					put(grammarAccess.getChainAccess().getPreconditionAssignment_4_0(), "rule__Chain__PreconditionAssignment_4_0");
					put(grammarAccess.getChainAccess().getUniqueCompAssignment_4_1_1(), "rule__Chain__UniqueCompAssignment_4_1_1");
					put(grammarAccess.getChainAccess().getGroupsAssignment_4_1_2(), "rule__Chain__GroupsAssignment_4_1_2");
					put(grammarAccess.getChainAccess().getChildrenAssignment_5_0(), "rule__Chain__ChildrenAssignment_5_0");
					put(grammarAccess.getProcedureAccess().getComponentAliasAssignment_1_0(), "rule__Procedure__ComponentAliasAssignment_1_0");
					put(grammarAccess.getProcedureAccess().getContextRefAssignment_1_1(), "rule__Procedure__ContextRefAssignment_1_1");
					put(grammarAccess.getProcedureAccess().getUniqueAssignment_1_2(), "rule__Procedure__UniqueAssignment_1_2");
					put(grammarAccess.getProcedureAccess().getNameAssignment_2(), "rule__Procedure__NameAssignment_2");
					put(grammarAccess.getProcedureAccess().getParamsAssignment_4_2(), "rule__Procedure__ParamsAssignment_4_2");
					put(grammarAccess.getProcedureAccess().getUniqueCompAssignment_5(), "rule__Procedure__UniqueCompAssignment_5");
					put(grammarAccess.getProcedureAccess().getGroupsAssignment_6(), "rule__Procedure__GroupsAssignment_6");
					put(grammarAccess.getProcedureAccess().getIndexAssignment_7(), "rule__Procedure__IndexAssignment_7");
					put(grammarAccess.getProcedureAccess().getCreateRulesAssignment_8(), "rule__Procedure__CreateRulesAssignment_8");
					put(grammarAccess.getProcedureAccess().getTypeAssignment_10_1(), "rule__Procedure__TypeAssignment_10_1");
					put(grammarAccess.getObserverAccess().getNameAssignment_1(), "rule__Observer__NameAssignment_1");
					put(grammarAccess.getObserverAccess().getObservedGroupAssignment_3(), "rule__Observer__ObservedGroupAssignment_3");
					put(grammarAccess.getObserverAccess().getUniqueCompAssignment_4(), "rule__Observer__UniqueCompAssignment_4");
					put(grammarAccess.getObserverAccess().getGroupsAssignment_5(), "rule__Observer__GroupsAssignment_5");
					put(grammarAccess.getObserverAccess().getCreateRulesAssignment_6(), "rule__Observer__CreateRulesAssignment_6");
					put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_2(), "rule__Parameter__TypeAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalLangParser typedParser = (InternalLangParser) parser;
			typedParser.entryRuleProject();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public LangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(LangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
