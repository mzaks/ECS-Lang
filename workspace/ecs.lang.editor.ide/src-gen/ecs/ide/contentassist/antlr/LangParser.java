/*
 * generated by Xtext 2.10.0
 */
package ecs.ide.contentassist.antlr;

import com.google.inject.Inject;
import ecs.ide.contentassist.antlr.internal.InternalLangParser;
import ecs.services.LangGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class LangParser extends AbstractContentAssistParser {

	@Inject
	private LangGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalLangParser createParser() {
		InternalLangParser result = new InternalLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAliasAccess().getAlternatives_4(), "rule__Alias__Alternatives_4");
					put(grammarAccess.getAComponentAccess().getAlternatives(), "rule__AComponent__Alternatives");
					put(grammarAccess.getComponentAccess().getAlternatives_3(), "rule__Component__Alternatives_3");
					put(grammarAccess.getComponentAccess().getAlternatives_3_0(), "rule__Component__Alternatives_3_0");
					put(grammarAccess.getInputTriggerAccess().getAlternatives(), "rule__InputTrigger__Alternatives");
					put(grammarAccess.getGroupAccess().getAlternatives_0(), "rule__Group__Alternatives_0");
					put(grammarAccess.getComponentApiAccessorAccess().getAlternatives(), "rule__ComponentApiAccessor__Alternatives");
					put(grammarAccess.getASystemAccess().getAlternatives(), "rule__ASystem__Alternatives");
					put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
					put(grammarAccess.getContextDefinitionAccess().getGroup(), "rule__ContextDefinition__Group__0");
					put(grammarAccess.getPlatformsAccess().getGroup(), "rule__Platforms__Group__0");
					put(grammarAccess.getNamespaceAccess().getGroup(), "rule__Namespace__Group__0");
					put(grammarAccess.getAliasAccess().getGroup(), "rule__Alias__Group__0");
					put(grammarAccess.getSingleAliasAccess().getGroup(), "rule__SingleAlias__Group__0");
					put(grammarAccess.getAliasListAccess().getGroup(), "rule__AliasList__Group__0");
					put(grammarAccess.getAliasRuleAccess().getGroup(), "rule__AliasRule__Group__0");
					put(grammarAccess.getAliasRuleAccess().getGroup_3(), "rule__AliasRule__Group_3__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_3_0_0(), "rule__Component__Group_3_0_0__0");
					put(grammarAccess.getComponentAccess().getGroup_3_0_1(), "rule__Component__Group_3_0_1__0");
					put(grammarAccess.getComponentAccess().getGroup_3_1(), "rule__Component__Group_3_1__0");
					put(grammarAccess.getComponentPropertyAccess().getGroup(), "rule__ComponentProperty__Group__0");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getInputAccess().getGroup(), "rule__Input__Group__0");
					put(grammarAccess.getInputAccess().getGroup_6(), "rule__Input__Group_6__0");
					put(grammarAccess.getInputAccess().getGroup_7(), "rule__Input__Group_7__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_0(), "rule__InputTrigger__Group_0__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_1(), "rule__InputTrigger__Group_1__0");
					put(grammarAccess.getInputTriggerAccess().getGroup_2(), "rule__InputTrigger__Group_2__0");
					put(grammarAccess.getCreateRuleAccess().getGroup(), "rule__CreateRule__Group__0");
					put(grammarAccess.getUniqueComponentAccessAccess().getGroup(), "rule__UniqueComponentAccess__Group__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getGroupAccess().getGroup_5(), "rule__Group__Group_5__0");
					put(grammarAccess.getGroupAccess().getGroup_6(), "rule__Group__Group_6__0");
					put(grammarAccess.getGroupAccess().getGroup_7(), "rule__Group__Group_7__0");
					put(grammarAccess.getApiRuleAccess().getGroup(), "rule__ApiRule__Group__0");
					put(grammarAccess.getApiRuleAccess().getGroup_1(), "rule__ApiRule__Group_1__0");
					put(grammarAccess.getParentSystemAccess().getGroup(), "rule__ParentSystem__Group__0");
					put(grammarAccess.getParentSystemAccess().getGroup_4(), "rule__ParentSystem__Group_4__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getProjectAccess().getPlatformDefinitionAssignment_0(), "rule__Project__PlatformDefinitionAssignment_0");
					put(grammarAccess.getProjectAccess().getNamespaceAssignment_1(), "rule__Project__NamespaceAssignment_1");
					put(grammarAccess.getProjectAccess().getTypeAliasesAssignment_2(), "rule__Project__TypeAliasesAssignment_2");
					put(grammarAccess.getProjectAccess().getComponentsAssignment_3(), "rule__Project__ComponentsAssignment_3");
					put(grammarAccess.getProjectAccess().getSystemsAssignment_4(), "rule__Project__SystemsAssignment_4");
					put(grammarAccess.getProjectAccess().getParentSystemsAssignment_5(), "rule__Project__ParentSystemsAssignment_5");
					put(grammarAccess.getProjectAccess().getContextDefinitionsAssignment_6(), "rule__Project__ContextDefinitionsAssignment_6");
					put(grammarAccess.getContextDefinitionAccess().getNameAssignment_1(), "rule__ContextDefinition__NameAssignment_1");
					put(grammarAccess.getContextDefinitionAccess().getComponentsAssignment_3(), "rule__ContextDefinition__ComponentsAssignment_3");
					put(grammarAccess.getPlatformsAccess().getIdsAssignment_1(), "rule__Platforms__IdsAssignment_1");
					put(grammarAccess.getPlatformIDAccess().getNameAssignment(), "rule__PlatformID__NameAssignment");
					put(grammarAccess.getNamespaceAccess().getNameAssignment_1(), "rule__Namespace__NameAssignment_1");
					put(grammarAccess.getAliasAccess().getComponentAliasAssignment_1(), "rule__Alias__ComponentAliasAssignment_1");
					put(grammarAccess.getAliasAccess().getUniqueAssignment_2(), "rule__Alias__UniqueAssignment_2");
					put(grammarAccess.getAliasAccess().getNameAssignment_3(), "rule__Alias__NameAssignment_3");
					put(grammarAccess.getAliasAccess().getListOfAliasesAssignment_4_0(), "rule__Alias__ListOfAliasesAssignment_4_0");
					put(grammarAccess.getAliasAccess().getSingleAliasAssignment_4_1(), "rule__Alias__SingleAliasAssignment_4_1");
					put(grammarAccess.getSingleAliasAccess().getTypeAliasAssignment_1(), "rule__SingleAlias__TypeAliasAssignment_1");
					put(grammarAccess.getSingleAliasAccess().getSizeAssignment_2(), "rule__SingleAlias__SizeAssignment_2");
					put(grammarAccess.getAliasListAccess().getRulesAssignment_1(), "rule__AliasList__RulesAssignment_1");
					put(grammarAccess.getAliasRuleAccess().getPlatformAssignment_0(), "rule__AliasRule__PlatformAssignment_0");
					put(grammarAccess.getAliasRuleAccess().getTypeAliasAssignment_2(), "rule__AliasRule__TypeAliasAssignment_2");
					put(grammarAccess.getAliasRuleAccess().getSizeAssignment_3_0(), "rule__AliasRule__SizeAssignment_3_0");
					put(grammarAccess.getAliasRuleAccess().getVariableSizeAssignment_3_1(), "rule__AliasRule__VariableSizeAssignment_3_1");
					put(grammarAccess.getComponentAccess().getUniqueAssignment_1(), "rule__Component__UniqueAssignment_1");
					put(grammarAccess.getComponentAccess().getNameAssignment_2(), "rule__Component__NameAssignment_2");
					put(grammarAccess.getComponentAccess().getValueTypeAssignment_3_0_0_1(), "rule__Component__ValueTypeAssignment_3_0_0_1");
					put(grammarAccess.getComponentAccess().getPropertiesAssignment_3_0_1_1(), "rule__Component__PropertiesAssignment_3_0_1_1");
					put(grammarAccess.getComponentAccess().getPrefixAssignment_3_1_1(), "rule__Component__PrefixAssignment_3_1_1");
					put(grammarAccess.getComponentPropertyAccess().getNameAssignment_0(), "rule__ComponentProperty__NameAssignment_0");
					put(grammarAccess.getComponentPropertyAccess().getTypeAssignment_2(), "rule__ComponentProperty__TypeAssignment_2");
					put(grammarAccess.getSystemAccess().getComponentAliasAssignment_1(), "rule__System__ComponentAliasAssignment_1");
					put(grammarAccess.getSystemAccess().getUniqueAssignment_2(), "rule__System__UniqueAssignment_2");
					put(grammarAccess.getSystemAccess().getInitAssignment_3(), "rule__System__InitAssignment_3");
					put(grammarAccess.getSystemAccess().getNameAssignment_4(), "rule__System__NameAssignment_4");
					put(grammarAccess.getSystemAccess().getInputAssignment_6(), "rule__System__InputAssignment_6");
					put(grammarAccess.getSystemAccess().getUniqueCompAssignment_7(), "rule__System__UniqueCompAssignment_7");
					put(grammarAccess.getSystemAccess().getGroupsAssignment_8(), "rule__System__GroupsAssignment_8");
					put(grammarAccess.getSystemAccess().getCreateRulesAssignment_9(), "rule__System__CreateRulesAssignment_9");
					put(grammarAccess.getInputAccess().getUnqiueAssignment_1(), "rule__Input__UnqiueAssignment_1");
					put(grammarAccess.getInputAccess().getTriggersAssignment_5(), "rule__Input__TriggersAssignment_5");
					put(grammarAccess.getInputAccess().getEnsureComponentsAssignment_6_2(), "rule__Input__EnsureComponentsAssignment_6_2");
					put(grammarAccess.getInputAccess().getExcludeComponentsAssignment_7_2(), "rule__Input__ExcludeComponentsAssignment_7_2");
					put(grammarAccess.getInputAccess().getApiRulesAssignment_10(), "rule__Input__ApiRulesAssignment_10");
					put(grammarAccess.getInputAccess().getDestroyAssignment_11(), "rule__Input__DestroyAssignment_11");
					put(grammarAccess.getInputTriggerAccess().getEnterComponentsAssignment_0_2(), "rule__InputTrigger__EnterComponentsAssignment_0_2");
					put(grammarAccess.getInputTriggerAccess().getLeftAssignment_1_2(), "rule__InputTrigger__LeftAssignment_1_2");
					put(grammarAccess.getInputTriggerAccess().getEnteredOrLeftAssignment_2_2(), "rule__InputTrigger__EnteredOrLeftAssignment_2_2");
					put(grammarAccess.getCreateRuleAccess().getNameAssignment_1(), "rule__CreateRule__NameAssignment_1");
					put(grammarAccess.getCreateRuleAccess().getComponentTypesAssignment_3(), "rule__CreateRule__ComponentTypesAssignment_3");
					put(grammarAccess.getUniqueComponentAccessAccess().getApiRuleAssignment_2(), "rule__UniqueComponentAccess__ApiRuleAssignment_2");
					put(grammarAccess.getGroupAccess().getGroupAssignment_0_0(), "rule__Group__GroupAssignment_0_0");
					put(grammarAccess.getGroupAccess().getUniqueAssignment_0_1(), "rule__Group__UniqueAssignment_0_1");
					put(grammarAccess.getGroupAccess().getNameAssignment_1(), "rule__Group__NameAssignment_1");
					put(grammarAccess.getGroupAccess().getAllOfComponentsAssignment_5_2(), "rule__Group__AllOfComponentsAssignment_5_2");
					put(grammarAccess.getGroupAccess().getAnyOfComponentsAssignment_6_2(), "rule__Group__AnyOfComponentsAssignment_6_2");
					put(grammarAccess.getGroupAccess().getNoneOfComponentsAssignment_7_2(), "rule__Group__NoneOfComponentsAssignment_7_2");
					put(grammarAccess.getGroupAccess().getApiRulesAssignment_10(), "rule__Group__ApiRulesAssignment_10");
					put(grammarAccess.getGroupAccess().getDestroyAssignment_11(), "rule__Group__DestroyAssignment_11");
					put(grammarAccess.getApiRuleAccess().getComponentAssignment_0(), "rule__ApiRule__ComponentAssignment_0");
					put(grammarAccess.getApiRuleAccess().getAccesorsAssignment_1_1(), "rule__ApiRule__AccesorsAssignment_1_1");
					put(grammarAccess.getParentSystemAccess().getComponentAliasAssignment_1(), "rule__ParentSystem__ComponentAliasAssignment_1");
					put(grammarAccess.getParentSystemAccess().getUniqueAssignment_2(), "rule__ParentSystem__UniqueAssignment_2");
					put(grammarAccess.getParentSystemAccess().getNameAssignment_3(), "rule__ParentSystem__NameAssignment_3");
					put(grammarAccess.getParentSystemAccess().getParentAssignment_4_1(), "rule__ParentSystem__ParentAssignment_4_1");
					put(grammarAccess.getParentSystemAccess().getChildrenAssignment_6(), "rule__ParentSystem__ChildrenAssignment_6");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalLangParser typedParser = (InternalLangParser) parser;
			typedParser.entryRuleProject();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public LangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(LangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
